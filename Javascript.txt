<script>
class Queue{
  
constructor(c)
{
  this.front = this.rear = 0;
  this.capacity = c;
  this.queue = new Array(this.capacity);
}

Enqueue(data)
{
  
  if (this.capacity == this.rear)
  {
    document.write("<br>Queue is full<br>");
    return;
  }

  else
  {
    this.queue[this.rear] = data;
    this.rear++;
  }
  return;
}

Dequeue()
{
  
  if (this.front == this.rear)
  {
    document.write("<br>Queue is empty<br>");
    return;
  }

  else
  {
    for(let i = 0; i < this.rear - 1; i++)
    {
      this.queue[i] = this.queue[i + 1];
    }
    if (this.rear < this.capacity)
      this.queue[this.rear] = 0;

    
    this.rear--;
  }
  return;
}

Display()
{
  let i;
  if (this.front == this.rear)
  {
    document.write("<br>Queue is Empty<br>");
    return;
  }
  for(i = this.front; i < this.rear; i++)
  {
    document.write(this.queue[i] + " <-- ");
  }
  return;
}

queueFront()
{
  if (this.front == this.rear)
  {
    document.write("<br>Queue is Empty<br>");
    return;
  }
  document.write("<br>Front Element is: " +
        this.queue[this.front]);
  return;
}
}

let q = new Queue(4);

q.Display();

q.Enqueue(7);
q.Enqueue(50);
q.Enqueue(0);
q.Enqueue(3);

q.Display();
q.Enqueue(6);

q.Display();

q.Dequeue();
q.Dequeue();
document.write("<br><br> after two node deletion <br><br>");

q.Display();


q.queueFront();



</script>
